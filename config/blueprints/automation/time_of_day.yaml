blueprint:
  name: schedule
  description: schedule_description
  domain: automation
  icon: "M15,13H16.5V15.82L18.94,17.23L18.19,18.53L15,16.69V13M19,8H5V19H9.67C9.24,18.09 9,17.07 9,16A7,7 0 0,1 16,9C17.07,9 18.09,9.24 19,9.67V8M5,21C3.89,21 3,20.1 3,19V5C3,3.89 3.89,3 5,3H6V1H8V3H16V1H18V3H19A2,2 0 0,1 21,5V11.1C22.24,12.36 23,14.09 23,16A7,7 0 0,1 16,23C14.09,23 12.36,22.24 11.1,21H5M16,11.15A4.85,4.85 0 0,0 11.15,16C11.15,18.68 13.32,20.85 16,20.85A4.85,4.85 0 0,0 20.85,16C20.85,13.32 18.68,11.15 16,11.15Z"
  group: time
  input:
    start_time:
      name: start_time_name
      description: start_time_description
      selector:
        time:
      default: null
    end_time:
      name: end_time_name
      description: end_time_description
      selector:
        time:
      default: null
    switch_target:
      name: switch_target_name
      description: target_time_switch_description
      default: {}
      selector:
        target:
          entity:
            domain: switch
    light_target:
      name: light_target_name
      description: target_time_light_description
      default: {}
      selector:
        target:
          entity:
            domain: light
    cover_target:
      name: cover_target_name
      description: device_action_cover_description
      default: {}
      selector:
        target:
          entity:
            domain: cover

trigger:
  - platform: time
    at: !input start_time
    id: "start_trigger"
  - platform: time
    at: !input end_time
    id: "end_trigger"
  - platform: template
    value_template: "{{ states('sensor.time') == states('input_datetime.start_time') or states('sensor.time') == states('input_datetime.end_time') }}"
    id: "start_or_end_trigger"


action:
  - choose:
      - conditions:
          # Turn On Time
          - alias: Start Trigger
            condition: trigger
            id: "start_trigger"
        sequence:
          - service: homeassistant.turn_on
            target: !input light_target
          - service: homeassistant.turn_on
            target: !input switch_target
          - service: cover.open_cover
            target: !input cover_target
      - conditions:
          # Turn Off Time
          - alias: End Trigger
            condition: trigger
            id: "end_trigger"
        sequence:
          - service: homeassistant.turn_off
            target: !input light_target
          - service: homeassistant.turn_off
            target: !input switch_target
          - service: cover.close_cover
            target: !input cover_target
    default: []
