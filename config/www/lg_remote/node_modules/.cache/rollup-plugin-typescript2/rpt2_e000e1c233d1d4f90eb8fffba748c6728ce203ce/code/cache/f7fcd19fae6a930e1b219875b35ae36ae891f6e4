{"code":"import * as en from './languages/en.json';\r\nimport * as pt from './languages/pt.json';\r\nimport * as es from './languages/es.json';\r\nimport * as de from './languages/de.json';\r\nimport * as it from './languages/it.json';\r\nimport * as fr from './languages/fr.json';\r\nimport * as ptBR from './languages/pt-BR.json';\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst languages = {\r\n    en: en,\r\n    pt: pt,\r\n    es: es,\r\n    de: de,\r\n    it: it,\r\n    fr: fr,\r\n    ptBr: ptBR,\r\n};\r\nexport function localize(string, search = '', replace = '') {\r\n    const lang = (localStorage.getItem('selectedLanguage') || 'en').replace(/['\"]+/g, '').replace('-', '_');\r\n    let translated;\r\n    try {\r\n        translated = string.split('.').reduce((o, i) => o[i], languages[lang]);\r\n    }\r\n    catch (e) {\r\n        translated = string.split('.').reduce((o, i) => o[i], languages['en']);\r\n    }\r\n    if (translated === undefined)\r\n        translated = string.split('.').reduce((o, i) => o[i], languages['en']);\r\n    if (search !== '' && replace !== '') {\r\n        translated = translated.replace(search, replace);\r\n    }\r\n    return translated;\r\n}\r\n","references":["/workspaces/lg_remote/src/localize/languages/en.json","/workspaces/lg_remote/src/localize/languages/pt.json","/workspaces/lg_remote/src/localize/languages/es.json","/workspaces/lg_remote/src/localize/languages/de.json","/workspaces/lg_remote/src/localize/languages/it.json","/workspaces/lg_remote/src/localize/languages/fr.json","/workspaces/lg_remote/src/localize/languages/pt-BR.json"]}
