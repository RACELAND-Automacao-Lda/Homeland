blueprint:
  name: leave_zone
  description: leave_zone_description
  icon: "M15 11.5C13.62 11.5 12.5 10.38 12.5 9S13.62 6.5 15 6.5 17.5 7.62 17.5 9 16.38 11.5 15 11.5M8 9C8 14.25 15 22 15 22S22 14.25 22 9C22 5.13 18.87 2 15 2S8 5.13 8 9M6 7L1 12L6 17V7Z"
  group: zone
  domain: automation
  input:
    person_entity:
      name: person_entity_name
      description: person_entity_description
      selector:
        entity:
          domain: device_tracker
    zone_entity:
      name: zone_entity_name
      description: zone_entity_out_description
      selector:
        entity:
          domain: zone
    optional_input:
      name: action_state
      description: action_state_description
      default: 'Turn On'
      selector:
        select:
          options:
            - 'Turn On'
            - 'Turn Off'
    switch_target:
      name: switch_target_name
      description: device_action_switch_description
      default: {}
      selector:
        target:
          entity:
            domain: switch
    light_target:
      name: light_target_name
      description: device_action_light_description
      default: {}
      selector:
        target:
          entity:
            domain: light

trigger:
  platform: state
  entity_id: !input person_entity


variables:
  zone_entity: !input zone_entity
  light_target: !input light_target
  switch_target: !input switch_target
  # This is the state of the person when it's in this zone.
  zone_state: "{{ states[zone_entity].name }}"
  person_entity: !input person_entity
  person_name: "{{ states[person_entity].name }}"
  optional_input: !input optional_input

condition:
  condition: template
  value_template: "{{ trigger.from_state.state == zone_state and trigger.to_state.state != zone_state }}"

action:
  - choose:
      - conditions: "{{ light_target|length > 0 and switch_target|length > 0 and optional_input == 'Turn Off' }}"
        sequence:
          - service: homeassistant.turn_off
            target: !input switch_target
          - service: homeassistant.turn_off
            target: !input light_target
      - conditions: "{{ light_target|length > 0 and switch_target|length > 0 and optional_input == 'Turn On' }}"
        sequence:
          - service: homeassistant.turn_on
            target: !input switch_target
          - service: homeassistant.turn_on
            target: !input light_target
    default: []
